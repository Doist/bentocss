// Name:            Overflow
// Description:     Atomic overflow classes
//
// Namespace:       `scrollable-*`
//                  `scrollbar-*`
//                  `overflow-*`
//
// Dependencies:    vars-base
//
// Based on:
//
// https://github.com/uikit/uikit/blob/v2.17.0/src/less/core/utility.less
// https://github.com/jxnblk/basscss/blob/v5.2.1/scss/_utility-layout.scss
//
// ========================================================================


// Variables
// ========================================================================

@overflow-ns:                                 @ns;

@overflow-scrollable-breakpoints:             false;
@overflow-scrollbar-breakpoints:              false;
@overflow-overflow-breakpoints:               false;


// ========================================================================
// Util: Overflow
// ========================================================================

// Scrollable
// ========================================================================

.mixin(overflow-scrollable) {

    // Horizontal scrolling
    // Inspired on Medium

    .@{overflow-ns}scrollable-x@{breakpoint} {
        overflow-x: auto;
        overflow-y: hidden;
        // Inertia scrolling
        -webkit-overflow-scrolling: touch;
        -ms-overflow-style: -ms-autohiding-scrollbar;        
    }

    // Enable scrolling for preformatted text

    .@{overflow-ns}scrollable-text@{breakpoint} {
        overflow-y: scroll;
        -webkit-overflow-scrolling: touch;
        resize: both;
    }

    // Box with scrolling enabled

    .@{overflow-ns}scrollable-box@{breakpoint} {
        box-sizing: border-box;
        overflow: auto;
        -webkit-overflow-scrolling: touch;
        resize: both;
    }

    .@{overflow-ns}scrollable-box@{breakpoint} > :last-child { margin-bottom: 0; }
}

& when not (@overflow-scrollable-breakpoints = false) {

    .render-responsive-rulesets(@overflow-scrollable-breakpoints; overflow-scrollable);
}


// Scrollbars
// ========================================================================

.mixin(overflow-scrollbar) {

    // Not supported on Firefox
    //
    // 1. IE, Edge
    //    https://developer.mozilla.org/en-US/docs/Web/CSS/-ms-overflow-style
    // 2. Chrome, Safari, Opera
    //    https://developer.mozilla.org/en-US/docs/Web/CSS/::-webkit-scrollbar

    .@{overflow-ns}scrollbar-none@{breakpoint}  {
        // 1
        -ms-overflow-style: none;

        // 2
        &::-webkit-scrollbar {
            display: none;
        } 
    } 

    // Must be applied to a parent element
    // Inspired on https://stackoverflow.com/a/23771140 and medium.com

    .@{overflow-ns}scrollbar-x-hide@{breakpoint} {
        overflow-y: hidden;

        & > * {
            margin-bottom: -100px !important;
            padding-bottom: 100px !important;        
        }
    }

    .@{overflow-ns}scrollbar-y-hide@{breakpoint} {
        overflow-x: hidden;

        & > * {
            margin-@{end}: -100px !important;
            padding-@{end}: 100px !important;        
        }
    }    
}

& when not (@overflow-scrollbar-breakpoints = false) {

    .render-responsive-rulesets(@overflow-scrollbar-breakpoints; overflow-scrollbar);
}


// Overflow
// ========================================================================

.mixin(overflow-overflow) {

    // Enable scrollbars if content is clipped

    .@{overflow-ns}overflow-container@{breakpoint} {
        overflow: auto;
        -webkit-overflow-scrolling: touch;
    }

    .@{overflow-ns}overflow-container@{breakpoint} > :last-child { margin-bottom: 0; }

    .@{overflow-ns}overflow-hidden@{breakpoint} { overflow: hidden }
    .@{overflow-ns}overflow-scroll@{breakpoint} { overflow: scroll }
    .@{overflow-ns}overflow-auto@{breakpoint}   { overflow: auto }
}

& when not (@overflow-overflow-breakpoints = false) {

    .render-responsive-rulesets(@overflow-overflow-breakpoints; overflow-overflow);
}


// Hooks
// ========================================================================

& { .hook-util-overflow; }

.hook-util-overflow() {}