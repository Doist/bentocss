// Name:            Component
// Description:     Atomic text classes
//
// Namespace:       `text-*`
//                  `link-*`
//
// Dependencies:    vars-base
//                  tool-responsive
//
// Based on:
//
// https://github.com/uikit/uikit/blob/v2.17.0/src/less/core/utility.less
// https://github.com/uikit/uikit/blob/v2.17.0/src/less/core/text.less
// https://github.com/suitcss/utils-text/blob/0.4.2/lib/text.css
// https://github.com/twbs/bootstrap/blob/v4.0.0-alpha/scss/mixins/_hide-text.scss
//
// ========================================================================


// Variables
// ========================================================================

@text-ns:                                       @ns;

@text-enable-smoothing:                         false;
@text-enable-replacement:                       false;
@text-enable-size:                              false;
@text-enable-weight:                            false;
@text-enable-style:                             false;
@text-enable-color:                             false;
@text-enable-wrap:                              false;
@text-enable-link:                              false;

// Alignment

@text-align-h-breakpoints:                      false;
@text-align-v-breakpoints:                      false;

// Color

@text-color-muted:                              @base-color-text-muted;
@text-color-primary:                            @base-color-text-primary;
@text-color-success:                            @base-color-text-success;
@text-color-warning:                            @base-color-text-warning;
@text-color-danger:                             @base-color-text-danger;
@text-color-contrast:                           @base-color-text-inverse;

@text-color-link-muted:                         @base-color-text;
@text-color-link-muted-hover:                   @base-color-text;

// Text

@text-bold-font-weight:                         @base-bold-font-weight;

@text-small-font-size:                          11/@px;
@text-small-line-height:                        16/11;
@text-large-font-size:                          18/@px;
@text-large-line-height:                        24/18;
@text-large-font-weight:                        @base-normal-font-weight;

@text-super-font-size:                          60%;


// Text
// ========================================================================

& when (@text-enable-smoothing = true) {

    // Font smoothing
    //
    // Antialiased font smoothing works best for light text on a dark background
    // Note this only applies to webkit-based desktop browsers and Firefox 25 (and later) on the Mac
    // http://www.usabilitypost.com/2012/11/05/stop-fixing-font-smoothing/

    .@{text-ns}text-antialiased {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    }
}


// Image replacement
// ========================================================================

& when (@text-enable-replacement = true) {

    .@{text-ns}text-hide {
        font: "0/0" a;
        color: transparent;
        text-shadow: none;
        background-color: transparent;
        border: 0;
    }
}


// Size modifiers
// ========================================================================

& when (@text-enable-size = true) {

    .@{text-ns}text-sm {
        font-size: @text-small-font-size;
        line-height: @text-small-line-height;
    }

    .@{text-ns}text-lg {
        font-size: @text-large-font-size;
        font-weight: @text-large-font-weight;        
        line-height: @text-large-line-height;
    }
}


// Weight modifiers
// ========================================================================

& when (@text-enable-weight = true) {

    .@{text-ns}text-bold { font-weight: @text-bold-font-weight; }
}


// Style modifiers
// ========================================================================

& when (@text-enable-style = true) {

    .@{text-ns}text-italic { font-style: italic; }
    .@{text-ns}text-regular { font-style: normal; }
    .@{text-ns}text-uppercase { text-transform: uppercase; }

    .@{text-ns}text-super {
        font-size: @text-super-font-size;
        vertical-align: super;
    }

    // Enables font kerning in all browsers.
    // http://blog.typekit.com/2014/02/05/kerning-on-the-web/
    //
    // 1. Chrome (not Windows), Firefox, Safari 6+, iOS, Android
    // 2. Chrome (not Windows), Firefox, IE 10+
    // 3. Safari 7 and future browsers

    .@{text-ns}text-kern {
        // 1 
        text-rendering: optimizeLegibility;
        // 2 
        font-feature-settings: "kern" 1;
        // 3 
        font-kerning: normal;
    }
}


// Color modifiers
// ========================================================================

& when (@text-enable-color = true) {

    .@{text-ns}text-muted { color: @text-color-muted; }
    .@{text-ns}text-primary { color: @text-color-primary; }
    .@{text-ns}text-success { color: @text-color-success; }
    .@{text-ns}text-warning { color: @text-color-warning; }
    .@{text-ns}text-danger { color: @text-color-danger; }
    .@{text-ns}text-contrast { color: @text-color-contrast; }

    // Inherit the ancestor's text color.

    .@{text-ns}text-color-inherit {
        color: inherit;
    }

    .@{text-ns}text-color-current {
        color: currentColor;
    }    
}


// Alignment modifiers
// ========================================================================

// Horizontal

.mixin(text-align-h-rulesets) {    

    .@{text-ns}text-start@{breakpoint} { text-align: @start; }
    .@{text-ns}text-end@{breakpoint} { text-align: @end; }
    .@{text-ns}text-center@{breakpoint} { text-align: center; }
    .@{text-ns}text-justify@{breakpoint} { text-align: justify; }   
}

// Vertical

.mixin(text-align-v-rulesets) {    

    .@{text-ns}text-top@{breakpoint} { vertical-align: top; }
    .@{text-ns}text-middle@{breakpoint} { vertical-align: middle; }
    .@{text-ns}text-bottom@{breakpoint} { vertical-align: bottom; }    
}

& when not (@text-align-h-breakpoints = false) {

    .render-responsive-rulesets(@text-align-h-breakpoints; text-align-h-rulesets);
}

& when not (@text-align-v-breakpoints = false) {

    .render-responsive-rulesets(@text-align-v-breakpoints; text-align-v-rulesets);
}


// Wrap modifiers
// ========================================================================

// Text truncation
//
// Prevent text from wrapping onto multiple lines, and truncate with an
// ellipsis.
//
// 1. Ensure that the node has a maximum width after which truncation can
//    occur.
// 2. Fix for IE 8/9 if `word-wrap: break-word` is in effect on ancestor
//    nodes.

.mixin(text-truncate) {
    // 1 
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    // 2 
    word-wrap: normal;    
}

.mixin(text-truncate-wrap) {
    // 1 
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    // 2 
    word-wrap: normal;    
}

& when (@text-enable-wrap = true) {

    // Prevent text from wrapping onto multiple lines

    .@{text-ns}text-nowrap { white-space: nowrap; }

    .@{text-ns}text-truncate,
    .@{text-ns}text-truncate-nowrap {
        .mixin(text-truncate);
    }

    .@{text-ns}text-truncate-wrap {
        .mixin(text-truncate-wrap);
    }

    // Break strings if their length exceeds the width of their container

    .@{text-ns}text-break {
        word-wrap: break-word;
        hyphens: auto;
    }
}


// Link
// ========================================================================

& when (@text-enable-link = true) {

    // Let links appear in default text color

    .@{text-ns}link-muted { color: @text-color-link-muted; }

    .@{text-ns}link-muted:hover { color: @text-color-link-muted-hover; }

    // Reset link style

    .@{text-ns}link-reset,
    .@{text-ns}link-reset:hover {
        color: inherit;
        text-decoration: none;
    }
}


// Hooks
// ========================================================================

.hook-util-text;

.hook-util-text() {}