// Name:            Offset
// Description:     Atomic horizontal offset classes
//
// Namespace:       `offset-*`
//                  `push-*`
//                  `pull-*`
//
// Dependencies:    vars-base
//                  tool-responsive
//
// Based on:
//
// https://github.com/uikit/uikit/blob/v2.17.0/src/less/core/utility.less
// http://getbootstrap.com/css/#grid-offsetting
//
// ========================================================================


// Variables
// ========================================================================

@offset-ns:                                     @ns;

// Ratios

// breakpoint list
@offset-ratios-breakpoints:                     false;

// unit list
@offset-ratios-base:                            false;

@offset-ratios-base-push:                       @offset-ratios-base;
@offset-ratios-base-pull:                       @offset-ratios-base;
@offset-ratios-base-offset:                     @offset-ratios-base;

@offset-ratios-small:                           @offset-ratios-base;

@offset-ratios-small-push:                      @offset-ratios-small;
@offset-ratios-small-pull:                      @offset-ratios-small;
@offset-ratios-small-offset:                    @offset-ratios-small;

@offset-ratios-medium:                          @offset-ratios-base;

@offset-ratios-medium-push:                     @offset-ratios-medium;
@offset-ratios-medium-pull:                     @offset-ratios-medium;
@offset-ratios-medium-offset:                   @offset-ratios-medium;

@offset-ratios-large:                           @offset-ratios-base;

@offset-ratios-large-push:                      @offset-ratios-large;
@offset-ratios-large-pull:                      @offset-ratios-large;
@offset-ratios-large-offset:                    @offset-ratios-large;

@offset-ratios-xlarge:                          @offset-ratios-base;

@offset-ratios-xlarge-push:                     @offset-ratios-xlarge;
@offset-ratios-xlarge-pull:                     @offset-ratios-xlarge;
@offset-ratios-xlarge-offset:                   @offset-ratios-xlarge;


// ========================================================================
// Util: Offset
// ========================================================================

// Proportional offsets
// Any ratio is supported: 2, 3, 4, 5, 6, 8, 10, 12
//
// Objects: `push-*`, `pull-*`, `offset-*`
// =========================================================================

.offset-rulesets(@offset-ratio) {
  
    // Generate classes for current ratio    

    .loop-ratio-classes(@i: @offset-ratio) when (@i > 0) {

        .loop-ratio-classes(@i - 1);
      
        .@{offset-ns}@{offset-type}-@{i}-@{offset-ratio}@{breakpoint} { @{offset-property}: percentage(@i/@offset-ratio)*@offset-sign; }
    }
  
    .loop-ratio-classes();
}

.render-offset-classes(@offset-type; @offset-ratios; @breakpoint) when not (@offset-ratios = false) {
  
    // Set property name

    .set-property(@offset-type) when (@offset-type = push), (@offset-type = pull) {
        @offset-property: ~"@{start}";
    }
    .set-property(@offset-type) when (@offset-type = offset) {
        @offset-property: ~"margin-@{start}";
    } 
  
    .set-property(@offset-type);
  
    // Set value sign

    .set-sign(@offset-type) when (@offset-type = push), (@offset-type = offset) {
        @offset-sign: 1;
    }
    .set-sign(@offset-type) when (@offset-type = pull) {
        @offset-sign: -1;
    } 
  
    .set-sign(@offset-type);  
  
    // Loop through the available offset ratios
  
    .loop-offset-classes(@i: length(@offset-ratios)) when (@i > 0) {

        .loop-offset-classes(@i - 1);

        @offset-ratio: extract(@offset-ratios, @i);
      
        .offset-rulesets(@offset-ratio);
    }
  
    .loop-offset-classes();
} 

.mixin(offset-rulesets) {

    @offset-ratios-push: "offset-ratios-@{breakpoint-name}-push";
    @offset-ratios-pull: "offset-ratios-@{breakpoint-name}-pull";
    @offset-ratios-offset: "offset-ratios-@{breakpoint-name}-offset";

    // Source ordering

    .render-offset-classes(push; @@offset-ratios-push; @breakpoint);
    .render-offset-classes(pull; @@offset-ratios-pull; @breakpoint);

    // Offsetting

    .render-offset-classes(offset; @@offset-ratios-offset; @breakpoint);
}

& when not (@offset-ratios-breakpoints = false) {    

    [class^="@{offset-ns}push-"],
    [class*=" @{offset-ns}push-"],
    [class^="@{offset-ns}pull-"],
    [class*=" @{offset-ns}pull-"] { position: relative; }

    .render-responsive-rulesets(@offset-ratios-breakpoints; offset-rulesets);
}


// Hooks
// ========================================================================

.hook-util-offset;

.hook-util-offset() {}