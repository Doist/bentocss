// Name:            Box
// Description:     Atomic box classes
//
// Namespace:       `bg-*`
//                  `border-*`
//                  `opacity-*`
//
// Dependencies:    vars-base
//
// Based on:
//
// https://github.com/uikit/uikit/blob/v2.17.0/src/less/core/utility.less
// https://github.com/jxnblk/basscss/blob/v5.2.1/scss/_colors.scss
// https://github.com/jxnblk/basscss/blob/v5.2.1/scss/_color-borders.scss
// https://github.com/jxnblk/basscss/blob/v5.2.1/scss/_background-images.scss
//
// ========================================================================


// Variables
// ========================================================================

@box-ns:                                        @ns;

@box-important:                                 !important;

@box-enable-background-color:                   false;
@box-enable-background-images:                  false;
@box-enable-border-color:                       false;
@box-enable-border-radius:                      false;
@box-enable-opacity:                            false;

// breakpoint list
@box-background-images-breakpoints:             false;

// Color

@box-color-darken-1:                            @base-color-darken-1;
@box-color-darken-2:                            @base-color-darken-2;
@box-color-darken-3:                            @base-color-darken-3;
@box-color-darken-4:                            @base-color-darken-4;

// Opacity

@box-opacity-lower-1:                           @base-opacity-lower-1;
@box-opacity-lower-2:                           @base-opacity-lower-2;
@box-opacity-lower-3:                           @base-opacity-lower-3;
@box-opacity-lower-4:                           @base-opacity-lower-4;

// Border

@box-border-breakpoints:                        false;

@box-base-border-width:                         @base-border-width;
@box-base-border-color:                         @base-color-border;

@box-border-rounded-base:                       @base-border-radius;
@box-border-rounded-xsmall:                     @base-border-radius-xsmall;
@box-border-rounded-small:                      @base-border-radius-small;
@box-border-rounded-large:                      @base-border-radius-large;

@box-border-circular:                           @base-border-radius-circle;


// ========================================================================
// Util: Box
// ========================================================================

// Background
// ========================================================================

// Background Color

& when (@box-enable-background-color = true) {

    .@{box-ns}bg-darken-1 { background-color: @box-color-darken-1; }
    .@{box-ns}bg-darken-2 { background-color: @box-color-darken-2; }
    .@{box-ns}bg-darken-3 { background-color: @box-color-darken-3; }
    .@{box-ns}bg-darken-4 { background-color: @box-color-darken-4; }
}

// Background Images

.mixin(box-background-images) {    

    .@{box-ns}bg-img-none@{breakpoint}     { background-image: none @box-important; }    

    .@{box-ns}bg-cover@{breakpoint}        { background-size: cover; }
    .@{box-ns}bg-contain@{breakpoint}      { background-size: contain; }

    .@{box-ns}bg-center@{breakpoint}       { background-position: center; }
    .@{box-ns}bg-left@{breakpoint}         { background-position: left; }
    .@{box-ns}bg-right@{breakpoint}        { background-position: right; }
    .@{box-ns}bg-start@{breakpoint}        { background-position: @start; }
    .@{box-ns}bg-end@{breakpoint}          { background-position: @end; }

    .@{box-ns}bg-top@{breakpoint}          { background-position: top; }
    .@{box-ns}bg-top-center@{breakpoint}   { background-position: top center; }
    .@{box-ns}bg-top-left@{breakpoint}     { background-position: top left; }
    .@{box-ns}bg-top-right@{breakpoint}    { background-position: top right; }
    .@{box-ns}bg-top-start@{breakpoint}    { background-position: top @start; }
    .@{box-ns}bg-top-end@{breakpoint}      { background-position: top @end; }

    .@{box-ns}bg-bottom@{breakpoint}       { background-position: bottom; }
    .@{box-ns}bg-bottom-center@{breakpoint}{ background-position: bottom center; }
    .@{box-ns}bg-bottom-left@{breakpoint}  { background-position: bottom left; }
    .@{box-ns}bg-bottom-right@{breakpoint} { background-position: bottom right; }
    .@{box-ns}bg-bottom-start@{breakpoint} { background-position: bottom @start; }
    .@{box-ns}bg-bottom-end@{breakpoint}   { background-position: bottom @end; }

    .@{box-ns}bg-repeat@{breakpoint}       { background-repeat: repeat; }
    .@{box-ns}bg-repeat-none@{breakpoint}  { background-repeat: no-repeat; }
    .@{box-ns}bg-repeat-x@{breakpoint}     { background-repeat: repeat-x; }
    .@{box-ns}bg-repeat-y@{breakpoint}     { background-repeat: repeat-y; }
}

& when not (@box-background-images-breakpoints = false) {

    .render-responsive-rulesets(@box-background-images-breakpoints; box-background-images);
}


// Border
// ========================================================================

.mixin(box-border) { 

    .@{box-ns}border@{breakpoint} {
        border-color: @box-base-border-color;
        border-style: solid;
        border-width: @box-base-border-width;
    }

    .@{box-ns}border-top@{breakpoint} {
        border-color: @box-base-border-color;
        border-top-style: solid;
        border-top-width: @box-base-border-width;
    }

    .@{box-ns}border-right@{breakpoint} {
        border-color: @box-base-border-color;
        border-right-style: solid;
        border-right-width: @box-base-border-width;
    }

    .@{box-ns}border-bottom@{breakpoint} {
        border-color: @box-base-border-color;
        border-bottom-style: solid;
        border-bottom-width: @box-base-border-width;
    }

    .@{box-ns}border-left@{breakpoint} {
        border-color: @box-base-border-color;
        border-left-style: solid;
        border-left-width: @box-base-border-width;
    }

    .@{box-ns}border-start@{breakpoint} {
        border-color: @box-base-border-color;
        border-@{start}-style: solid;
        border-@{start}-width: @box-base-border-width;
    }

    .@{box-ns}border-end@{breakpoint} {
        border-color: @box-base-border-color;
        border-@{end}-style: solid;
        border-@{end}-width: @box-base-border-width;
    }
}

& when not (@box-border-breakpoints = false) {

    .render-responsive-rulesets(@box-border-breakpoints; box-border);
}

// Border Color

& when (@box-enable-border-color = true) {

    .@{box-ns}border-darken-1 { border-color: @box-color-darken-1; }
    .@{box-ns}border-darken-2 { border-color: @box-color-darken-2; }
    .@{box-ns}border-darken-3 { border-color: @box-color-darken-3; }
    .@{box-ns}border-darken-4 { border-color: @box-color-darken-4; }
}

// Border Radius

& when (@box-enable-border-radius = true) {

    .@{box-ns}border-circular { border-radius: @box-border-circular; }
    .@{box-ns}border-rounded { border-radius: @box-border-rounded-base; }

    .@{box-ns}border-rounded-top    { border-radius: @box-border-rounded-base @box-border-rounded-base 0 0; }
    .@{box-ns}border-rounded-right  { border-radius: 0 @box-border-rounded-base @box-border-rounded-base 0; }
    .@{box-ns}border-rounded-bottom { border-radius: 0 0 @box-border-rounded-base @box-border-rounded-base; }
    .@{box-ns}border-rounded-left   { border-radius: @box-border-rounded-base 0 0 @box-border-rounded-base; }

    .@{box-ns}border-rounded-start {
        & when (@base-text-direction = ltr) {
            border-radius: @box-border-rounded-base 0 0 @box-border-rounded-base;
        }
        & when (@base-text-direction = rtl) {
            border-radius: 0 @box-border-rounded-base @box-border-rounded-base 0;
        }
    }

    .@{box-ns}border-rounded-end {
        & when (@base-text-direction = ltr) {
            border-radius: 0 @box-border-rounded-base @box-border-rounded-base 0;
        }
        & when (@base-text-direction = rtl) {
            border-radius: @box-border-rounded-base 0 0 @box-border-rounded-base;
        }
    }

}

// Opacity
// ========================================================================

& when (@box-enable-opacity = true) {

    .@{box-ns}opacity-lower-1 { opacity: @box-opacity-lower-1 }
    .@{box-ns}opacity-lower-2 { opacity: @box-opacity-lower-2 }
    .@{box-ns}opacity-lower-3 { opacity: @box-opacity-lower-3 }
    .@{box-ns}opacity-lower-4 { opacity: @box-opacity-lower-4 }
}


// Hooks
// ========================================================================

& { .hook-util-box; }

.hook-util-box() {}