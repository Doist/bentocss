// Name:            Float
// Description:     Collection of float utility classes
//
// Namespace:       `clearfix`
//                  `clearfix-*`
//                  `nbfc`
//                  `nbfc-alt`
//                  `float-*`
//
// Dependencies:    vars-base
//                  tool-responsive
//
// Based on:
//
// https://github.com/uikit/uikit/blob/v2.17.0/src/less/core/utility.less
// https://github.com/suitcss/utils-layout/blob/0.4.2/lib/layout.css
//
// ========================================================================


// Variables
// ========================================================================

@float-ns:                                      @ns;

@float-enable-clearing:                         false;

// breakpoint list
@float-floats-breakpoints:                      false;


// ========================================================================
// Util: Float
// ========================================================================

// Clearing
// ========================================================================

& when (@float-enable-clearing = true) {

    // Contain floats
    //
    // Original clearfix from @necolas
    // https://github.com/suitcss/utils-layout/blob/0.4.2/lib/layout.css
    //
    // Make an element expand to contain floated children.
    // Uses pseudo-elements (micro clearfix).
    //
    // 1. The space content is one way to avoid an Opera bug when the
    //    `contenteditable` attribute is included anywhere else in the document.
    //    Otherwise it causes space to appear at the top and bottom of the
    //    element.
    // 2. The use of `table` rather than `block` is only necessary if using
    //    `::before` to contain the top-margins of child elements.

    .@{float-ns}clearfix::before,
    .@{float-ns}clearfix::after {
        // 1
        content: " ";
        // 2
        display: table;
    }

    .@{float-ns}clearfix::after {
        clear: both;
    }

    // Micro clearfix for children elements

    .@{list-ns}clearfix-children > *::before,
    .@{list-ns}clearfix-children > *::after {
        content: "";
        display: table;
    }

    .@{list-ns}clearfix-children > *::after {
        clear: both;
    }

    // Micro clearfix
    // `table-cell` is used with `::before` because `table` creates a 1px gap when it becomes a flex item, only in Webkit
    // `table` is used again with `::after` because `clear` only works with block elements.
    // Note: `display: block` with `overflow: hidden` is currently not working in the latest Safari

    .@{float-ns}clearfix-flex::before {
        content: "";
        display: table-cell;
    }

    .@{float-ns}clearfix-flex::after {
        content: "";
        display: table;
        clear: both;
    }

    // New block formatting context
    //
    // This affords some useful properties to the element. It won't wrap under
    // floats. Will also contain any floated children.
    // N.B. This will clip overflow. Use the alternative method below if this is
    // problematic.

    .@{float-ns}nbfc { overflow: hidden; }

    // New block formatting context (alternative)
    //
    // Alternative method when overflow must not be clipped.
    //
    // 1. Create a new block formatting context (NBFC).
    // 2. Avoid shrink-wrap behaviour of table-cell.
    //
    // N.B. This breaks down in some browsers when elements within this element
    // exceed its width.

    .@{float-ns}nbfc-alt {
        // 1
        display: table-cell;
        // 2
        width: 10000px;
    }
}


// Alignment of block elements
// ========================================================================

.mixin(float-rulesets) {

    .@{float-ns}float-start@{breakpoint} { float: @start; }
    .@{float-ns}float-end@{breakpoint} { float: @end; }    
}

& when not (@float-floats-breakpoints = false) {

    // Float blocks
    // 1. Prevent content overflow on small devices

    // 1
    [class^='@{float-ns}float-'],
    [class*=' @{float-ns}float-'] { max-width: 100%; }

    .render-responsive-rulesets(@float-floats-breakpoints; float-rulesets);
}


// Hooks
// ========================================================================

.hook-util-float;

.hook-util-float() {}