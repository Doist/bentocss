// Name:            Form
// Description:     Defines styles for forms
//
// Namespace:       `form-control` 
//                  `form-fieldset`
//                  `form-optgroup`
//                  `form-switch`      
//
// Modifiers:       `form-control--danger`
//                  `form-control--success`
//                  `form-control--sm`
//                  `form-control--lg`
//                  `form-control--blank`
//                  `form-control--width-xs`
//                  `form-control--width-sm`
//                  `form-control--width-md`
//                  `form-control--width-lg`
//
// Dependencies:    vars-base
//
// Markup:
//
// <!-- form -->
// <form>
//     <label for="form-input-1">Text</label>
//     <input class="form-control" type="text" id="form-input-1" placeholder="Text">
// </form>
//
// Based on:
//
// https://github.com/uikit/uikit/blob/v2.17.0/src/less/core/form.less
//
// ========================================================================


// Variables
// ========================================================================

@form-ns:                                       @ns;

@form-enable-global-normalize:                  false;
@form-enable-local-normalize:                   true;
@form-enable-additional-controls:               true;
@form-enable-modifier-size:                     false;
@form-enable-control-validation:                false;
@form-enable-control-blank:                     false;
@form-enable-modifier-width:                    false;

@form-control-height:                           @base-height;
@form-control-padding:                          4/@px 6/@px;
@form-control-font-size:                        @base-font-size;

@form-control-small-height:                     @base-height-small;
@form-control-small-padding:                    3/@px 3/@px;
@form-control-small-font-size:                  12/@px;

@form-control-large-height:                     @base-height-large;
@form-control-large-padding:                    8/@px 6/@px;
@form-control-large-font-size:                  16/@px;

@form-control-xsmall-width:                     40/@px;
@form-control-small-width:                      130/@px;
@form-control-medium-width:                     200/@px;
@form-control-large-width:                      500/@px;

@form-control-border-color:                     @base-color-border;
@form-control-border-width:                     @base-border-width;
@form-control-border-radius:                    0;
@form-control-background:                       @base-color-background-canvas;
@form-control-color:                            @base-color-text;
@form-control-transition:                       background-color linear 0.2s, border-color linear 0.2s, box-shadow linear 0.2s;

@form-control-focus-border-color:               @base-color-border-primary-box;
@form-control-focus-background:                 @base-color-background-primary-box;
@form-control-focus-color:                      @base-color-text;

@form-control-disabled-border-color:            @base-color-border;
@form-control-disabled-background:              @base-color-background-light;
@form-control-disabled-color:                   @base-color-text-muted;

@form-control-placeholder-color:                @base-color-text-muted;

@form-control-danger-border-color:              @base-color-border-danger-box;
@form-control-danger-background:                @base-color-background-danger-box;
@form-control-danger-color:                     @base-color-text-danger;

@form-control-success-border-color:             @base-color-border-success-box;
@form-control-success-background:               @base-color-background-success-box;
@form-control-success-color:                    @base-color-text-success;

@form-control-blank-border-color:               @base-color-border;
@form-control-blank-border-style:               dashed;


// ========================================================================
// Component: Form
// ========================================================================

// Normalize
// ========================================================================

// 1. Define consistent box sizing.
//    Default is `content-box` with following exceptions set to `border-box`
//    `button`, `select`, `input[type="checkbox"]` and `input[type="radio"]`
//    `input[type="search"]` in Chrome, Safari and Opera
//    `input[type="color"]` in Firefox
// 2. Address margins set differently in Firefox/IE and Chrome/Safari/Opera.
// 3. Remove `border-radius` in iOS.
// 4. Correct `font` properties and `color` not being inherited.

& when (@form-enable-global-normalize = true) {

    input,
    select,
    textarea {
        // 1
        box-sizing: border-box;
        // 2
        margin: 0;
        // 3
        border-radius: 0;
        // 4
        -webkit-font-smoothing: inherit;
        font: inherit;
        color: inherit;
    }

    // Address inconsistent `text-transform` inheritance which is only inherit in Firefox

    select { text-transform: none; }

    // 1. Correct `font` properties not being inherited.
    // 2. Don't inherit the `font-weight` and use `bold` instead.
    // NOTE: Both declarations don't work in Chrome, Safari and Opera.

    optgroup {
        // 1
        font: inherit;
        // 2
        font-weight: bold;
    }

    // Removes inner padding and border in Firefox 4+.

    input::-moz-focus-inner {
        border: 0;
        padding: 0;
    }

    // Removes excess padding in IE 8/9/10.

    input[type="checkbox"],
    input[type="radio"] { padding: 0; }

    // Improves consistency of cursor style for clickable elements

    input[type="checkbox"]:not(:disabled),
    input[type="radio"]:not(:disabled) { cursor: pointer; }

    // Remove default style in iOS.

    textarea,
    input:not([type]),
    input[type="text"],
    input[type="password"],
    input[type="email"],
    input[type="url"],
    input[type="search"],
    input[type="tel"],
    input[type="number"],
    input[type="datetime"] { -webkit-appearance: none; }

    // Remove inner padding and search cancel button in Chrome, Safari and Opera on OS X.

    input[type="search"]::-webkit-search-cancel-button,
    input[type="search"]::-webkit-search-decoration { -webkit-appearance: none; }

    // Fix the cursor style for Chrome's increment/decrement buttons. For certain
    // `font-size` values of the `input`, it causes the cursor style of the
    // decrement button to change from `default` to `text`.

    input[type="number"]::-webkit-inner-spin-button,
    input[type="number"]::-webkit-outer-spin-button { height: auto; }

    // Define consistent border, margin, and padding.

    fieldset {
        border: none;
        margin: 0;
        padding: 0;
    }

    // 1. Remove default vertical scrollbar in IE 8/9/10/11.
    // 2. Improve readability and alignment in all browsers.

    textarea {
        // 1
        overflow: auto;
        // 2
        vertical-align: top;
    }

    // Removes placeholder transparency in Firefox.

    ::-moz-placeholder { opacity: 1; }

    // Removes `box-shadow` for invalid controls in Firefox.

    :invalid { box-shadow: none; }

    // Vertical alignment
     
    input:not([type="radio"]):not([type="checkbox"]),
    select { vertical-align: middle; }
}


// Style
// ========================================================================

// Controls: input, textarea, select.
// Except type: `range`, `radio`, `checkbox`, `file`, `submit`, `reset`, `button` and `image`
//
// 1. Must be `height` because `min-height` is not working in OSX
// 2. Responsiveness: Sets a maximum width relative to the parent to scale on narrower viewports
// 3. Vertical `padding` needed for `select` elements in Firefox
// 4. Style

.mixin(form-control) {

    & when (@form-enable-local-normalize = true) {

        // See global normalize documentation

        box-sizing: border-box;
        margin: 0;
        border-radius: 0;
        -webkit-font-smoothing: inherit;
        font: inherit;
        color: inherit;

        &::-moz-placeholder { opacity: 1; }

        input&,
        select& { vertical-align: middle; }

        input&,
        textarea& { -webkit-appearance: none; }

        &[type="search"]::-webkit-search-cancel-button,
        &[type="search"]::-webkit-search-decoration { -webkit-appearance: none; }

        &[type="number"]::-webkit-inner-spin-button,
        &[type="number"]::-webkit-outer-spin-button { height: auto; }

        textarea& {
            overflow: auto;
            vertical-align: top;
        }

        select& { text-transform: none; }    
    }

    // 1
    height: @form-control-height;
    // 2
    max-width: 100%;
    // 3
    padding: @form-control-padding;
    // 4
    border: @form-control-border-width solid @form-control-border-color;
    border-radius: @form-control-border-radius;
    background-color: @form-control-background;
    color: @form-control-color;
    font-size: @form-control-font-size;
    transition: @form-control-transition;
    .hook-form-control;

    // Focus state
    &:focus {
        border-color: @form-control-focus-border-color;
        outline: 0;
        background-color: @form-control-focus-background;
        color: @form-control-focus-color;
        .hook-form-control-focus;
    }

    // Disabled state
    &:disabled {
        border-color: @form-control-disabled-border-color;
        background-color: @form-control-disabled-background;
        color: @form-control-disabled-color;
        .hook-form-control-disabled;
    }

    // Placeholder
    // Keep -moz and -webkit rules separated, -moz won't work when grouped with -webkit
    
    &:-ms-input-placeholder { color: @form-control-placeholder-color !important; }
    &::-moz-placeholder { color: @form-control-placeholder-color; }
    &::-webkit-input-placeholder { color: @form-control-placeholder-color; }

    &:disabled:-ms-input-placeholder { color: @form-control-disabled-color !important; }
    &:disabled::-moz-placeholder{ color: @form-control-disabled-color; }
    &:disabled::-webkit-input-placeholder { color: @form-control-disabled-color; }
}

.@{form-ns}form-control {
    .mixin(form-control);
}

// Use these optional controls when the global form reset is disabled

& when (@form-enable-additional-controls = true) {

    // Input `checkbox` and `radio`

    .form-switch {
        // See global normalize documentation
        & when (@form-enable-local-normalize = true) {

            box-sizing: border-box;
            margin: 0;

            &[type="checkbox"],
            &[type="radio"] { padding: 0; }

            &[type="checkbox"]:not(:disabled),
            &[type="radio"]:not(:disabled) { cursor: pointer; }
        }
        .hook-form-control-switch;
    }

    // Optgroup

    .form-optgroup {
        // See global normalize documentation
        & when (@form-enable-local-normalize = true) {
            font: inherit;
            font-weight: @base-bold-font-weight;
        }
        .hook-form-control-optgroup;
    }

    // Fieldset

    .form-fieldset {
        // See global normalize documentation
        & when (@form-enable-local-normalize = true) {
            border: none;
            margin: 0;
            padding: 0;
        }
        .hook-form-control-fieldset;
    }
}


// Size modifiers
// Higher specificity needed to override defaults
// ========================================================================

& when (@form-enable-modifier-size = true) {

    .@{form-ns}form-control--sm {
        height: @form-control-small-height;
        padding: @form-control-small-padding;
        font-size: @form-control-small-font-size;
    }

    .@{form-ns}form-control--lg  {
        height: @form-control-large-height;
        padding: @form-control-large-padding;
        font-size: @form-control-large-font-size;
    }
}


// Reset height
// Must appear after size modifiers
// ========================================================================

textarea.@{form-ns}form-control,
select[multiple].@{form-ns}form-control,
select[size].@{form-ns}form-control { height: auto; }


// Validation states
// Using !important to keep the selector simple
// ========================================================================

& when (@form-enable-control-validation = true) {

    // Error state

    .@{form-ns}form-control--danger {
        border-color: @form-control-danger-border-color !important;
        background-color: @form-control-danger-background !important;
        color: @form-control-danger-color !important;
        .hook-form-control-danger;
    }

    // Success state

    .@{form-ns}form-control--success  {
        border-color: @form-control-success-border-color !important;
        background-color: @form-control-success-background !important;
        color: @form-control-success-color !important;
        .hook-form-control-success;
    }
}


// Style sub-modifiers
// ========================================================================

& when (@form-enable-control-blank = true) {

    // Blank form control

    .@{form-ns}form-control--blank {
        border-color: transparent;
        border-style: @form-control-blank-border-style;
        background-color: none;
        .hook-form-control-blank;
    }

    .@{form-ns}form-control--blank:focus {
        border-color: @form-control-blank-border-color;
        background-color: none;
        .hook-form-control-blank-focus;
    }
}


// Width sub-modifiers
// ========================================================================

& when (@form-enable-modifier-width = true) {

    // Fixed widths
    // Different widths for xsmall sized `input` and `select` elements

    input.@{form-ns}form-control--width-xs { width: @form-control-xsmall-width; }
    select.@{form-ns}form-control--width-xs { width: (@form-control-xsmall-width + 25/@px); }

    .@{form-ns}form-control--width-sm { width: @form-control-small-width; }
    .@{form-ns}form-control--width-md { width: @form-control-medium-width; }
    .@{form-ns}form-control--width-lg { width: @form-control-large-width; }
}


// Hooks
// ========================================================================

.hook-form-misc;

.hook-form-control() {}
.hook-form-control-focus() {}
.hook-form-control-disabled() {}
.hook-form-control-blank() {}
.hook-form-control-blank-focus() {}
.hook-form-control-danger() {}
.hook-form-control-success() {}
.hook-form-control-switch() {}
.hook-form-control-optgroup() {}
.hook-form-control-fieldset() {}
.hook-form-misc() {}