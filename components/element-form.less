// Name:            Form
// Description:     Defines styles for forms
//
// Namespace:       `form`
//
// Sub-objects:     `form__row`
//                  `form__help-inline`
//                  `form__help-block`
//                  `form__label`
//                  `form__legend`
//                  `form__control`
//                  `form__controls`
//                  `form__controls-condensed`
//                  `form__icon`
//
// Modifiers:       `form--stacked`
//                  `form--horizontal`
//
// Sub-modifiers:   `form__control--danger`
//                  `form__control--success`
//                  `form__control--sm`
//                  `form__control--lg`
//                  `form__control--blank`
//                  `form__control--width-xsm`
//                  `form__control--width-sm`
//                  `form__control--width-md`
//                  `form__control--width-lg`
//                  `form__controls--text`
//
// Dependencies:    vars-base
//
// Markup:
//
// <!-- form -->
// <form class="form">
//     <div class="form__row">
//         <label class="form__label" for="form-input-1">Text</label>
//         <div class="form__controls">
//             <input class="form__control" type="text" id="form-input-1" placeholder="Text">
//         </div>
//     </div>
// </form>
//
// Based on:
//
// https://github.com/uikit/uikit/blob/v2.17.0/src/less/core/form.less
//
// ========================================================================


// Variables
// ========================================================================

@form-ns:                                       @ns;

@form-enable-modifier-size:                     false;
@form-enable-modifier-width:                    false;
@form-enable-sub-icon:                          false;

@form-control-height:                           @base-height;
@form-control-padding:                          4/@px 6/@px;
@form-control-font-size:                        @base-font-size;

@form-control-small-height:                     @base-height-small;
@form-control-small-padding:                    3/@px 3/@px;
@form-control-small-font-size:                  12/@px;

@form-control-large-height:                     @base-height-large;
@form-control-large-padding:                    8/@px 6/@px;
@form-control-large-font-size:                  16/@px;

@form-control-xsmall-width:                     40/@px;
@form-control-small-width:                      130/@px;
@form-control-medium-width:                     200/@px;
@form-control-large-width:                      500/@px;

@form-control-border-color:                     @base-color-border;
@form-control-border-width:                     @base-border-width;
@form-control-border-radius:                    0;
@form-control-background:                       @base-color-background-canvas;
@form-control-color:                            @base-color-text;
@form-control-transition:                       background-color linear 0.2s, border-color linear 0.2s, box-shadow linear 0.2s;

@form-control-focus-border-color:               @base-color-border-primary-box;
@form-control-focus-background:                 @base-color-background-primary-box;
@form-control-focus-color:                      @base-color-text;

@form-control-disabled-border-color:            @base-color-border;
@form-control-disabled-background:              @base-color-background-light;
@form-control-disabled-color:                   @base-color-text-muted;

@form-control-placeholder-color:                @base-color-text-muted;

@form-control-danger-border-color:              @base-color-border-danger-box;
@form-control-danger-background:                @base-color-background-danger-box;
@form-control-danger-color:                     @base-color-text-danger;

@form-control-success-border-color:             @base-color-border-success-box;
@form-control-success-background:               @base-color-background-success-box;
@form-control-success-color:                    @base-color-text-success;

@form-control-blank-border-color:               @base-color-border;
@form-control-blank-border-style:               dashed;

@form-label-font-weight:                        @base-bold-font-weight;
@form-label-margin-bottom:                      5/@px;

@form-legend-border-color:                      @base-color-border;
@form-legend-border-width:                      @base-border-width;
@form-legend-font-size:                         18/@px;
@form-legend-line-height:                       30/18;

@form-help-inline-margin-start:                 10/@px;
@form-help-block-margin-top:                    5/@px;

@form-controls-condensed-margin-vertical:       5/@px;

@form-gutter:                                   15/@px;

@form-horizontal-breakpoint-down:               @breakpoint-medium-max;
@form-horizontal-breakpoint-up:                 @breakpoint-large;
@form-horizontal-label-width:                   200/@px;
@form-horizontal-label-margin-top:              5/@px;
@form-horizontal-controls-margin-start:         215/@px;
@form-horizontal-controls-text-padding-top:     5/@px;

@form-icon-width:                               30/@px;
@form-icon-font-size:                           14/@px;
@form-icon-color:                               @base-color-text-muted;


// ========================================================================
// Component: Form
// ========================================================================

// Normalize
// ========================================================================

// 1. Define consistent box sizing.
//    Default is `content-box` with following exceptions set to `border-box`
//    `button`, `select`, `input[type="checkbox"]` and `input[type="radio"]`
//    `input[type="search"]` in Chrome, Safari and Opera
//    `input[type="color"]` in Firefox
// 2. Address margins set differently in Firefox/IE and Chrome/Safari/Opera.
// 3. Remove `border-radius` in iOS.
// 4. Correct `font` properties and `color` not being inherited.

input,
select,
textarea {
    // 1
    box-sizing: border-box;
    // 2
    margin: 0;
    // 3
    border-radius: 0;
    // 4
    -webkit-font-smoothing: inherit;
    font: inherit;
    color: inherit;
}

// Address inconsistent `text-transform` inheritance which is only inherit in Firefox

select { text-transform: none; }

// 1. Correct `font` properties not being inherited.
// 2. Don't inherit the `font-weight` and use `bold` instead.
// NOTE: Both declarations don't work in Chrome, Safari and Opera.

optgroup {
    // 1
    font: inherit;
    // 2
    font-weight: bold;
}

// Removes inner padding and border in Firefox 4+.

input::-moz-focus-inner {
    border: 0;
    padding: 0;
}

// Removes excess padding in IE 8/9/10.

input[type="checkbox"],
input[type="radio"] { padding: 0; }

// Improves consistency of cursor style for clickable elements

input[type="checkbox"]:not(:disabled),
input[type="radio"]:not(:disabled) { cursor: pointer; }

// Remove default style in iOS.

textarea,
input:not([type]),
input[type="text"],
input[type="password"],
input[type="email"],
input[type="url"],
input[type="search"],
input[type="tel"],
input[type="number"],
input[type="datetime"] { -webkit-appearance: none; }

// Remove inner padding and search cancel button in Chrome, Safari and Opera on OS X.

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration { -webkit-appearance: none; }

// Fix the cursor style for Chrome's increment/decrement buttons. For certain
// `font-size` values of the `input`, it causes the cursor style of the
// decrement button to change from `default` to `text`.

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button { height: auto; }

// Define consistent border, margin, and padding.

fieldset {
    border: none;
    margin: 0;
    padding: 0;
}

// 1. Remove default vertical scrollbar in IE 8/9/10/11.
// 2. Improve readability and alignment in all browsers.

textarea {
    // 1
    overflow: auto;
    // 2
    vertical-align: top;
}

// Removes placeholder transparency in Firefox.

::-moz-placeholder { opacity: 1; }

// Removes `box-shadow` for invalid controls in Firefox.

:invalid { box-shadow: none; }

// Vertical alignment
 
input:not([type="radio"]):not([type="checkbox"]),
select { vertical-align: middle; }


// Style
// ========================================================================

// Remove margin from the last-child

.@{form-ns}form > :last-child { margin-bottom: 0; }

// Controls
// Except for `range`, `radio`, `checkbox`, `file`, `submit`, `reset`, `button` and `image`
// 1. Must be `height` because `min-height` is not working in OSX
// 2. Responsiveness: Sets a maximum width relative to the parent to scale on narrower viewports
// 3. Vertical `padding` needed for `select` elements in Firefox
// 4. Style

.form__control-Template() {
    // 1
    height: @form-control-height;
    // 2
    max-width: 100%;
    // 3
    padding: @form-control-padding;
    // 4
    border: @form-control-border-width solid @form-control-border-color;
    border-radius: @form-control-border-radius;
    background-color: @form-control-background;
    color: @form-control-color;
    font-size: @form-control-font-size;
    transition: @form-control-transition;
    .hook-form-control;

    // Focus state
    &:focus {
        border-color: @form-control-focus-border-color;
        outline: 0;
        background-color: @form-control-focus-background;
        color: @form-control-focus-color;
        .hook-form-control-focus;
    }

    // Disabled state
    &:disabled {
        border-color: @form-control-disabled-border-color;
        background-color: @form-control-disabled-background;
        color: @form-control-disabled-color;
        .hook-form-control-disabled;
    }

    // Placeholder
    // Keep -moz and -webkit rules separated, -moz won't work when grouped with -webkit
    
    &:-ms-input-placeholder { color: @form-control-placeholder-color !important; }
    &::-moz-placeholder { color: @form-control-placeholder-color; }
    &::-webkit-input-placeholder { color: @form-control-placeholder-color; }

    &:disabled:-ms-input-placeholder { color: @form-control-disabled-color !important; }
    &:disabled::-moz-placeholder{ color: @form-control-disabled-color; }
    &:disabled::-webkit-input-placeholder { color: @form-control-disabled-color; }
}

.@{form-ns}form__control {
    .form__control-Template;
}

// Legend
// 1. Behave like block element
// 2. Correct `color` not being inherited in IE 8/9/10/11.
// 3. Remove padding
// 4. `margin-bottom` is not working in Safari and Opera.
//    Using `padding` and :after instead to create the border
// 5. Style

.@{form-ns}form__legend {
    // 1
    width: 100%;
    // 2
    border: 0;
    // 3
    padding: 0;
    // 4
    padding-bottom: @form-gutter;
    // 5
    font-size: @form-legend-font-size;
    line-height: @form-legend-line-height;
    .hook-form-legend;
}

// 1. Fixes IE9

.@{form-ns}form__legend:after {
    content: "";
    display: block;
    border-bottom: @form-legend-border-width solid @form-legend-border-color;
    // 1
    width: 100%;
}


// Size modifiers
// Higher specificity needed to override defaults
// ========================================================================

& when (@form-enable-modifier-size = true) {

    .@{form-ns}form__control--sm {
        height: @form-control-small-height;
        padding: @form-control-small-padding;
        font-size: @form-control-small-font-size;
    }

    .@{form-ns}form__control--lg  {
        height: @form-control-large-height;
        padding: @form-control-large-padding;
        font-size: @form-control-large-font-size;
    }
}


// Reset height
// Must be after size modifiers
// ========================================================================

textarea.@{form-ns}form__control,
select[multiple].@{form-ns}form__control,
select[size].@{form-ns}form__control { height: auto; }


// Validation states
// Using !important to keep the selector simple
// ========================================================================

// Error state

.@{form-ns}form__control--danger {
    border-color: @form-control-danger-border-color !important;
    background-color: @form-control-danger-background !important;
    color: @form-control-danger-color !important;
    .hook-form-control-danger;
}

// Success state

.@{form-ns}form__control--success  {
    border-color: @form-control-success-border-color !important;
    background-color: @form-control-success-background !important;
    color: @form-control-success-color !important;
    .hook-form-control-success;
}


// Style sub-modifiers
// ========================================================================

// Blank form control

.@{form-ns}form__control--blank {
    border-color: transparent;
    border-style: @form-control-blank-border-style;
    background-color: none;
    .hook-form-control-blank;
}

.@{form-ns}form__control--blank:focus {
    border-color: @form-control-blank-border-color;
    background-color: none;
    .hook-form-control-blank-focus;
}


// Size sub-modifiers
// ========================================================================

& when (@form-enable-modifier-width = true) {

    // Fixed widths
    // Different widths for xsmall sized `input` and `select` elements

    input.@{form-ns}form__control--width-xsm { width: @form-control-xsmall-width; }
    select.@{form-ns}form__control--width-xsm { width: (@form-control-xsmall-width + 25/@px); }

    .@{form-ns}form__control--width-sm { width: @form-control-small-width; }
    .@{form-ns}form__control--width-md { width: @form-control-medium-width; }
    .@{form-ns}form__control--width-lg { width: @form-control-large-width; }
}


// Sub-objects: `form__row`
// Groups labels and controls in rows
// ========================================================================

// Micro clearfix
// Needed for `form--horizontal` modifier

.@{form-ns}form__row:before,
.@{form-ns}form__row:after {
    content: "";
    display: table;
}

.@{form-ns}form__row:after { clear: both; }

// Vertical gutter

.@{form-ns}form__row + .@{form-ns}form__row { margin-top: @form-gutter; }


// Help text
// Sub-object: `form__help-inline`, `form__help-block`
// ========================================================================

.@{form-ns}form__help-inline {
    display: inline-block;
    margin: 0;
    margin-@{start}: @form-help-inline-margin-start;
}

.@{form-ns}form__help-block { margin: @form-help-block-margin-top 0 0 0; }


// Controls content
// Sub-object: `form__controls`, `form__controls-condensed`
// ========================================================================

// Remove margins

.@{form-ns}form__controls > :first-child { margin-top: 0; }
.@{form-ns}form__controls > :last-child { margin-bottom: 0; }

// Group controls and text into blocks with a small spacing between blocks

.@{form-ns}form__controls-condensed { margin: @form-controls-condensed-margin-vertical 0; }


// Modifier: `form--stacked`
// Requires sub-object: `form__label`
// ========================================================================

.@{form-ns}form--stacked .@{form-ns}form__label {
    display: block;
    margin-bottom: @form-label-margin-bottom;
    font-weight: @form-label-font-weight;
    .hook-form-stacked-label;
}


// Modifier: `form--horizontal`
// Requires sub-objects: `form__label`, `form__controls`
// ========================================================================

// Tablet portrait and smaller
@media (max-width: @form-horizontal-breakpoint-down) {

    // Behave like `form-stacked`
    .@{form-ns}form--horizontal .@{form-ns}form__label {
        display: block;
        margin-bottom: @form-label-margin-bottom;
        font-weight: @form-label-font-weight;
        .hook-form-stacked-label;
    }

}

// Desktop and bigger
@media (min-width: @form-horizontal-breakpoint-up) {

    .@{form-ns}form--horizontal .@{form-ns}form__label {
        width: @form-horizontal-label-width;
        margin-top: @form-horizontal-label-margin-top;
        float: @start;
        .hook-form-horizontal-label;
    }

    .@{form-ns}form--horizontal .@{form-ns}form__controls { margin-@{start}: @form-horizontal-controls-margin-start; }

    // Better vertical alignment if controls are checkboxes and radio buttons with text
    .@{form-ns}form--horizontal .@{form-ns}form__controls--text { padding-top: @form-horizontal-controls-text-padding-top; }

}


// Sub-object: `form__icon`
// ========================================================================

& when (@form-enable-sub-icon = true) {

    // 1. Container width fits its content
    // 2. Create position context
    // 3. Prevent `inline-block` consequences

    .@{form-ns}form__icon {
        // 1
        display: inline-block;
        // 2
        position: relative;
        // 3
        max-width: 100%;
    }

    // 1. Make form element clickable through icon

    .@{form-ns}form__icon > [class^='icon-'],
    .@{form-ns}form__icon > [class*=' icon-'] {
        position: absolute;
        top: 50%;
        width: @form-icon-width;
        margin-top: round(@form-icon-font-size / -2);
        font-size: @form-icon-font-size;
        color: @form-icon-color;
        text-align: center;
        // 1
        pointer-events: none;
    }

    .@{form-ns}form__icon > .@{form-ns}form__control { padding-@{start}: @form-icon-width; }

    // Sub-modifier: `form__icon--flip`

    .@{form-ns}form__icon--flip > [class^='icon-'],
    .@{form-ns}form__icon--flip > [class*=' icon-'] { @{end}: 0; }
    .@{form-ns}form__icon--flip > .@{form-ns}form__control { padding-@{end}: @form-icon-width; }
}


// Hooks
// ========================================================================

.hook-form-misc;

.hook-form-control() {}
.hook-form-control-focus() {}
.hook-form-control-disabled() {}
.hook-form-control-blank() {}
.hook-form-control-blank-focus() {}
.hook-form-control-danger() {}
.hook-form-control-success() {}
.hook-form-legend() {}
.hook-form-stacked-label() {}
.hook-form-horizontal-label() {}
.hook-form-misc() {}